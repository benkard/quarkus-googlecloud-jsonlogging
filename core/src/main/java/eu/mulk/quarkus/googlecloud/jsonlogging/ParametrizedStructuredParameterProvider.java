// SPDX-FileCopyrightText: © 2021 Matthias Andreas Benkard <code@mail.matthias.benkard.de>
//
// SPDX-License-Identifier: LGPL-3.0-or-later

package eu.mulk.quarkus.googlecloud.jsonlogging;

import org.jboss.logmanager.ExtLogRecord;

/**
 * A user-supplied provider for {@link StructuredParameter}s.
 *
 * <p>Instances of this interface that are registered with the {@link Formatter} are applied to each
 * log entry, passing as parameter, that is logged.
 *
 * <p>If you are using the Quarkus extension, any CDI beans registered under this interface are
 * registered automatically.
 *
 * <p><strong>Example:</strong>
 *
 * {@snippet :
 * @Singleton
 * @Unremovable
 * public final class TraceLogParameterProvider implements ParametrizedStructuredParameterProvider {
 *
 *   @Override
 *   public StructuredParameter getParameter(ExtLogRecord logRecord) {
 *     var b = Json.createObjectBuilder();
 *     b.add("traceId", Span.current().getSpanContext().getTraceId());
 *     b.add("logger", logRecord.getLoggerName());
 *     return () -> b;
 *   }
 * }
 *}
 *
 * Result:
 *
 * {@snippet lang="json" :
 * {
 *   "jsonPayload": {
 *     "message": "Request rejected: unauthorized.",
 *     "traceId": "39f9a49a9567a8bd7087b708f8932550",
 *     "logger": "com.foo.bar.LogSourceClass"
 *   }
 * }
 * }
 *
 * @see LabelProvider
 */
public interface ParametrizedStructuredParameterProvider {

  /**
   * Provides a {@link StructuredParameter} to add to each log entry that is logged.
   *
   * <p>It is often useful to return a custom {@link StructuredParameter} rather than a {@link
   * KeyValueParameter} from this method. This way multiple key–value pairs can be generated by a
   * single invocation.
   *
   * @param logEntry - current logEntry to extract params
   *
   * @return a {@link StructuredParameter} to add to each log entry that is logged.
   */
  StructuredParameter getParameter(ExtLogRecord logEntry);
}
